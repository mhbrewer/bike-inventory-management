@model BikeInventoryManagement.Models.Bike

@{
    ViewData["Title"] = "Edit";

    if(Model.BikeType == null)
    {
        Model.BikeType = new BikeType { ID = 0, Name = "Null" };
    }
    if (Model.StorageLocation == null)
    {
        Model.StorageLocation = new Location { ID = 0, Name = "Null" };
    }
}

<h1>Edit</h1>

<h4>Bike</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="ID" />
            <div class="form-group">
                <label asp-for="Brand" class="control-label"></label>
                <input asp-for="Brand" class="form-control" />
                <span asp-validation-for="Brand" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Model" class="control-label"></label>
                <input asp-for="Model" class="form-control" />
                <span asp-validation-for="Model" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Color" class="control-label"></label>
                <input asp-for="Color" class="form-control" />
                <span asp-validation-for="Color" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="FrameSizeCm" class="control-label"></label>
                <input asp-for="FrameSizeCm" class="form-control" />
                <span asp-validation-for="FrameSizeCm" class="text-danger"></span>
            </div>
            <div class="select">
                <label for="selectedBikeTypeId" class="control-label">@Html.DisplayNameFor(model => model.BikeType)</label>
                <select name="selectedBikeTypeId">
                    @if (Model.BikeType.ID == 0)
                    {
                        <option selected value=0></option>
                    }
                    @foreach (BikeType type in ViewBag.BikeTypes)
                    {
                        @if (Model.BikeType.ID == type.ID)
                        {
                            <option selected value=@type.ID>@type.Name</option>
                        }
                        else
                        {
                            <option value=@type.ID>@type.Name</option>
                        }
                    }
                </select>
            </div>
            <div class="form-group form-check">
                <label class="form-check-label">
                    <input class="form-check-input" asp-for="IsBoxed" /> @Html.DisplayNameFor(model => model.IsBoxed)
                </label>
            </div>
            <div class="form-group">
                <label asp-for="SerialNumber" class="control-label"></label>
                <input asp-for="SerialNumber" class="form-control" />
                <span asp-validation-for="SerialNumber" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Condition" class="control-label"></label>
                <input asp-for="Condition" class="form-control" />
                <span asp-validation-for="Condition" class="text-danger"></span>
            </div>
            <div class="select">
                <label for="selectedLocationId" class="control-label">@Html.DisplayNameFor(model => model.StorageLocation)</label>
                <select name="selectedLocationId">
                    @if (Model.StorageLocation.ID == 0)
                    {
                        <option selected value=0></option>
                    }
                    @foreach (Location loc in ViewBag.Locations)
                    {
                        @if (Model.StorageLocation.ID == loc.ID)
                        {
                            <option selected value=@loc.ID>@loc.Name</option>
                        }
                        else
                        {
                            <option value=@loc.ID>@loc.Name</option>
                        }
                    }
                </select>
            </div>
            <div class="form-group form-check">
                <label class="form-check-label">
                    <input class="form-check-input" asp-for="IsListable" /> @Html.DisplayNameFor(model => model.IsListable)
                </label>
            </div>
            <div class="form-group">
                <label asp-for="Cost" class="control-label"></label>
                <input asp-for="Cost" class="form-control" />
                <span asp-validation-for="Cost" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="ListPrice" class="control-label"></label>
                <input asp-for="ListPrice" class="form-control" />
                <span asp-validation-for="ListPrice" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="InventoryCount" class="control-label"></label>
                <input asp-for="InventoryCount" class="form-control" value=1 />
                <span asp-validation-for="InventoryCount" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Notes" class="control-label"></label>
                <input asp-for="Notes" class="form-control" />
                <span asp-validation-for="Notes" class="text-danger"></span>
            </div>
            <input type="hidden" asp-for="CreatedOn"/>
            <input type="hidden" asp-for="LastUpdatedOn" value="@DateTime.Now" />
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
